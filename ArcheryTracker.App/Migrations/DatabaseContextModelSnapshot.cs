// <auto-generated />
using System;
using System.Collections.Generic;
using ArcheryTracker.Logic.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ArcheryTracker.App.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ArcheryTracker.Logic.Models.Round", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<List<int>>("Scores")
                        .HasColumnType("integer[]");

                    b.Property<string>("SessionId")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("ArcheryTracker.Logic.Models.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ArcheryTracker.Logic.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ArcheryTracker.Logic.Models.UserStats", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("OverallAccuracy")
                        .HasColumnType("double precision");

                    b.Property<double>("OverallBullseyeAccuracy")
                        .HasColumnType("double precision");

                    b.Property<double>("PreviousOverallAccuracy")
                        .HasColumnType("double precision");

                    b.Property<double>("ShotsPerSession")
                        .HasColumnType("double precision");

                    b.Property<int>("ShotsThisMonth")
                        .HasColumnType("integer");

                    b.Property<int>("TotalBullseye")
                        .HasColumnType("integer");

                    b.Property<int>("TotalOnTarget")
                        .HasColumnType("integer");

                    b.Property<int>("TotalShots")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserStats");
                });

            modelBuilder.Entity("ArcheryTracker.Logic.Models.Round", b =>
                {
                    b.HasOne("ArcheryTracker.Logic.Models.Session", null)
                        .WithMany()
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("ArcheryTracker.Logic.Models.Session", b =>
                {
                    b.HasOne("ArcheryTracker.Logic.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
