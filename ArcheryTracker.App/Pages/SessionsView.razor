@page "/mysessions"
@using ArcheryTracker.Logic.Models
@using ArcheryTracker.Logic
@using ArcheryTracker.App.Util

@inject SessionService SessionService
@inject IdentityService IdentityService

@attribute [Authorize]

<h1>Sessions by Day</h1>

<button class="btn-main-primary d-inline">Start session</button>

@if (_sessions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Total Shots</th>
            <th>On Target Accuracy</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var session in _sessions)
        {
            var sessionUrl = $"/Session/{session.Id}";
            <tr>
                <td>@session.Date.ToString("MM/dd/yyyy")</td>
                <td>[placeholder]</td>
                <td>[placeholder]</td>
                <td><a href=@sessionUrl>Session Details <span class="oi oi-chevron-right" ></span></a></td>
            </tr>
        }
        </tbody>
    </table>
    </div>
}

@code {
    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }
    
    private string _userId;
    private List<Session> _sessions;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        
        _userId = IdentityService.GetLoggedInUserId(authState);
        _sessions = await SessionService.GetSessionsForUser(_userId);
    }
}
